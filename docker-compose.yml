version: '3.8'

services:
  # PostgreSQL –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
  postgres:
    image: postgres:15-alpine
    container_name: lingua-ai-postgres
    command: ["postgres", "-c", "listen_addresses=*", "-c", "shared_buffers=128MB", "-c", "max_connections=50"]
    environment:
      POSTGRES_DB: lingua_ai
      POSTGRES_USER: lingua_user
      POSTGRES_PASSWORD: lingua_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lingua_user -d lingua_ai"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Whisper API —Å–µ—Ä–≤–µ—Ä
  whisper:
    image: onerahmet/openai-whisper-asr-webservice:latest
    container_name: whisper
    volumes:
      - ./audio:/app/audio  # –ü–∞–ø–∫–∞ —Å –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞–º–∏ –¥–ª—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞
    ports:
      - "8081:9000"  # API –ø–æ—Ä—Ç
    environment:
      - ASR_MODEL=${WHISPER_MODEL:-small}  # üéØ –ú–æ–¥–µ–ª—å: small (—Å—Ç–∞—Ä—Ç) –∏–ª–∏ medium (–∫–∞—á–µ—Å—Ç–≤–æ)
      - ASR_TASK=transcribe   # üìù –ó–∞–¥–∞—á–∞: —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è
      - ASR_DEVICE=cpu        # üîß CPU (–∏–ª–∏ gpu –µ—Å–ª–∏ –µ—Å—Ç—å)
      - ASR_COMPUTE_TYPE=${WHISPER_COMPUTE:-int8} # üìä int8 (—ç–∫–æ–Ω–æ–º–∏—è) –∏–ª–∏ float32 (–∫–∞—á–µ—Å—Ç–≤–æ)
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Lingua AI
  app:
    build: .
    container_name: lingua-ai-app
    environment:
      # Telegram Bot Configuration
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_WEBHOOK_URL: ${TELEGRAM_WEBHOOK_URL:-}
      
      # AI Provider Configuration
      AI_PROVIDER: ${AI_PROVIDER:-deepseek}
      AI_MODEL: ${AI_MODEL:-deepseek-chat}
      AI_MAX_TOKENS: ${AI_MAX_TOKENS:-1000}
      AI_TEMPERATURE: ${AI_TEMPERATURE:-0.7}
      
      # DeepSeek Configuration
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY}
      DEEPSEEK_BASE_URL: ${DEEPSEEK_BASE_URL:-https://api.deepseek.com/v1}
      
      # OpenRouter Configuration (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞)
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY:-}
      OPENROUTER_SITE_URL: ${OPENROUTER_SITE_URL:-https://lingua-ai.ru}
      OPENROUTER_SITE_NAME: ${OPENROUTER_SITE_NAME:-Lingua AI}
      
      # Whisper Configuration
      WHISPER_API_URL: http://whisper:9000
      
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: lingua_user
      DB_PASSWORD: lingua_password
      DB_NAME: lingua_ai
      DB_SSL_MODE: disable
      
      # Application Configuration
      APP_ENV: ${APP_ENV:-production}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      APP_PORT: 8080
      
      # YooKassa Configuration
      YUKASSA_SHOP_ID: ${YUKASSA_SHOP_ID:-test_shop_id}
      YUKASSA_SECRET_KEY: ${YUKASSA_SECRET_KEY:-test_secret_key}
      YUKASSA_TEST_MODE: ${YUKASSA_TEST_MODE:-true}
      
      # TTS Configuration
      TTS_ENABLED: ${TTS_ENABLED:-false}

    volumes:
      - ./logs:/app/logs
      - ./audio:/app/audio  # –û–±—â–∞—è –ø–∞–ø–∫–∞ –¥–ª—è –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤
      - /opt/lingua-ai-tts/tts_env:/opt/tts:ro  # –í—Å–µ TTS –æ–∫—Ä—É–∂–µ–Ω–∏–µ
      - /root/.local/share/tts:/root/.local/share/tts:ro  # TTS –º–æ–¥–µ–ª–∏
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      whisper:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # # pgAdmin –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   container_name: lingua-ai-pgadmin
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@lingua-ai.com
  #     PGADMIN_DEFAULT_PASSWORD: admin123
  #   volumes:
  #     - pgadmin_data:/var/lib/pgadmin
  #   ports:
  #     - "5050:80"
  #   depends_on:
  #     - postgres
  #   restart: unless-stopped
  #   profiles:
  #     - tools

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  default:
    name: lingua-ai-network 